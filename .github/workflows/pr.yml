name: PR Build

on: [ pull_request ]

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    env:
      BASE_PROJECT: armory-cli
      PR_NUMBER: ${{ github.event.number }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.ARMORY_PLATFORM_GITHUB_PAT_TOKEN }}
          submodules: recursive

      - name: Setup Go environment
        uses: actions/setup-go@v3.5.0
        with:
          go-version-file: 'go.mod'

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: go-

      - name: Configure git for private modules
        run: git config --global url."https://x-access-token:${{ secrets.ARMORY_PLATFORM_GITHUB_PAT_TOKEN }}@github.com".insteadOf "https://github.com"

      - name: Login to Artifactory
        run: |
          docker login -u ${{ secrets.ARTIFACTORY_USER }} -p ${{ secrets.ARTIFACTORY_TOKEN }} armory-docker-local.jfrog.io
        shell: bash

      - name: Run build
        id: build
        env:
          IMAGE_TAG: preview
          REGISTRY: "armory-docker-local.jfrog.io/"
        run: |
          make all release

      - name: Upload Tests Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: armory-cli-reports
          path: |
            build/reports/*

      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
