name: PR Build

on: [ pull_request ]

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    env:
      BASE_PROJECT: armory-cli
      PR_NUMBER: ${{ github.event.number }}
      PVT_GITHUB_ACCESS_TOKEN: ${{ secrets.GO_PRIVATE_REPO_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.4

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: go-

      - name: Get GitHub App Installation Token for Private Go Repos
        id: get_token
        uses: machine-learning-apps/actions-app-token@0.21
        with:
          APP_PEM: ${{ secrets.GO_PRIVATE_REPO_APP_KEY }}
          APP_ID: ${{ secrets.GO_PRIVATE_REPO_APP_ID }}

      - name: Configure git for private modules
        env:
          TOKEN: ${{ steps.get_token.outputs.app_token }}
        run: git config --global url."https://x-access-token:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Run build
        run: |
          make all

      - name: Run integration-tests
        run: |
          make integration

      - name: Upload Tests Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: armory-cli-reports
          path: |
            build/reports/*

      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: armory-docker-local.jfrog.io/armory/${{ env.BASE_PROJECT }}
          tags: |
            type=ref,event=pr

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: armory-docker-local.jfrog.io
          username: ${{ secrets.ARTIFACTORY_USER }}
          password: ${{ secrets.ARTIFACTORY_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_PATH=./build/dist/linux_amd64/armory
