// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.17.3
// source: strategy.proto

package protobuff

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Strategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Strategy_Recreate
	//	*Strategy_BlueGreen
	//	*Strategy_Canary
	//	*Strategy_Rolling
	//	*Strategy_Versioned
	//	*Strategy_Update
	Type           isStrategy_Type `protobuf_oneof:"type"`
	TrafficRouting *TrafficRouting `protobuf:"bytes,7,opt,name=traffic_routing,json=trafficRouting,proto3" json:"traffic_routing,omitempty"`
	Rollback       *Rollback       `protobuf:"bytes,8,opt,name=rollback,proto3" json:"rollback,omitempty"`
	Stability      *Stability      `protobuf:"bytes,9,opt,name=stability,proto3" json:"stability,omitempty"`
	Checks         []*Check        `protobuf:"bytes,10,rep,name=checks,proto3" json:"checks,omitempty"`
}

func (x *Strategy) Reset() {
	*x = Strategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strategy) ProtoMessage() {}

func (x *Strategy) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strategy.ProtoReflect.Descriptor instead.
func (*Strategy) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{0}
}

func (m *Strategy) GetType() isStrategy_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Strategy) GetRecreate() *Recreate {
	if x, ok := x.GetType().(*Strategy_Recreate); ok {
		return x.Recreate
	}
	return nil
}

func (x *Strategy) GetBlueGreen() *BlueGreen {
	if x, ok := x.GetType().(*Strategy_BlueGreen); ok {
		return x.BlueGreen
	}
	return nil
}

func (x *Strategy) GetCanary() *Canary {
	if x, ok := x.GetType().(*Strategy_Canary); ok {
		return x.Canary
	}
	return nil
}

func (x *Strategy) GetRolling() *RollingUpdate {
	if x, ok := x.GetType().(*Strategy_Rolling); ok {
		return x.Rolling
	}
	return nil
}

func (x *Strategy) GetVersioned() bool {
	if x, ok := x.GetType().(*Strategy_Versioned); ok {
		return x.Versioned
	}
	return false
}

func (x *Strategy) GetUpdate() bool {
	if x, ok := x.GetType().(*Strategy_Update); ok {
		return x.Update
	}
	return false
}

func (x *Strategy) GetTrafficRouting() *TrafficRouting {
	if x != nil {
		return x.TrafficRouting
	}
	return nil
}

func (x *Strategy) GetRollback() *Rollback {
	if x != nil {
		return x.Rollback
	}
	return nil
}

func (x *Strategy) GetStability() *Stability {
	if x != nil {
		return x.Stability
	}
	return nil
}

func (x *Strategy) GetChecks() []*Check {
	if x != nil {
		return x.Checks
	}
	return nil
}

type isStrategy_Type interface {
	isStrategy_Type()
}

type Strategy_Recreate struct {
	Recreate *Recreate `protobuf:"bytes,1,opt,name=recreate,proto3,oneof"`
}

type Strategy_BlueGreen struct {
	BlueGreen *BlueGreen `protobuf:"bytes,2,opt,name=blue_green,json=blueGreen,proto3,oneof"`
}

type Strategy_Canary struct {
	Canary *Canary `protobuf:"bytes,3,opt,name=canary,proto3,oneof"`
}

type Strategy_Rolling struct {
	Rolling *RollingUpdate `protobuf:"bytes,4,opt,name=rolling,proto3,oneof"`
}

type Strategy_Versioned struct {
	// Versioned: change the name and track references in Deployment
	// ConfigMap and Secrets are versioned by default
	Versioned bool `protobuf:"varint,5,opt,name=Versioned,proto3,oneof"`
}

type Strategy_Update struct {
	// Update object in place
	Update bool `protobuf:"varint,6,opt,name=Update,proto3,oneof"`
}

func (*Strategy_Recreate) isStrategy_Type() {}

func (*Strategy_BlueGreen) isStrategy_Type() {}

func (*Strategy_Canary) isStrategy_Type() {}

func (*Strategy_Rolling) isStrategy_Type() {}

func (*Strategy_Versioned) isStrategy_Type() {}

func (*Strategy_Update) isStrategy_Type() {}

// Recreate: delete the whole thing, recreate: traffic may be lost but it will be cheap
type Recreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Recreate) Reset() {
	*x = Recreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recreate) ProtoMessage() {}

func (x *Recreate) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recreate.ProtoReflect.Descriptor instead.
func (*Recreate) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{1}
}

// Blue/green: bring up the new deployment, switch at once, and keep the old instances for a little while
// This is strongly inspired by Argo's blue/green with potential adjustments to
// generalize blue/green strategy
type BlueGreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveService               string                 `protobuf:"bytes,1,opt,name=activeService,proto3" json:"activeService,omitempty"`
	PreviewService              string                 `protobuf:"bytes,2,opt,name=previewService,proto3" json:"previewService,omitempty"`
	PreviewReplicaCount         *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=previewReplicaCount,proto3" json:"previewReplicaCount,omitempty"`
	AutoPromotionEnabled        *wrapperspb.BoolValue  `protobuf:"bytes,4,opt,name=autoPromotionEnabled,proto3" json:"autoPromotionEnabled,omitempty"`
	AutoPromotionSeconds        int32                  `protobuf:"varint,5,opt,name=autoPromotionSeconds,proto3" json:"autoPromotionSeconds,omitempty"`
	ScaleDownDelaySeconds       *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=scaleDownDelaySeconds,proto3" json:"scaleDownDelaySeconds,omitempty"`
	ScaleDownDelayRevisionLimit *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=scaleDownDelayRevisionLimit,proto3" json:"scaleDownDelayRevisionLimit,omitempty"`
	PrePromotionAnalysis        *CheckRun              `protobuf:"bytes,8,opt,name=prePromotionAnalysis,proto3" json:"prePromotionAnalysis,omitempty"`
	AntiAffinity                *AntiAffinity          `protobuf:"bytes,9,opt,name=antiAffinity,proto3" json:"antiAffinity,omitempty"`
	PostPromotionAnalysis       *CheckRun              `protobuf:"bytes,10,opt,name=postPromotionAnalysis,proto3" json:"postPromotionAnalysis,omitempty"`
}

func (x *BlueGreen) Reset() {
	*x = BlueGreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlueGreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueGreen) ProtoMessage() {}

func (x *BlueGreen) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueGreen.ProtoReflect.Descriptor instead.
func (*BlueGreen) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{2}
}

func (x *BlueGreen) GetActiveService() string {
	if x != nil {
		return x.ActiveService
	}
	return ""
}

func (x *BlueGreen) GetPreviewService() string {
	if x != nil {
		return x.PreviewService
	}
	return ""
}

func (x *BlueGreen) GetPreviewReplicaCount() *wrapperspb.Int32Value {
	if x != nil {
		return x.PreviewReplicaCount
	}
	return nil
}

func (x *BlueGreen) GetAutoPromotionEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutoPromotionEnabled
	}
	return nil
}

func (x *BlueGreen) GetAutoPromotionSeconds() int32 {
	if x != nil {
		return x.AutoPromotionSeconds
	}
	return 0
}

func (x *BlueGreen) GetScaleDownDelaySeconds() *wrapperspb.Int32Value {
	if x != nil {
		return x.ScaleDownDelaySeconds
	}
	return nil
}

func (x *BlueGreen) GetScaleDownDelayRevisionLimit() *wrapperspb.Int32Value {
	if x != nil {
		return x.ScaleDownDelayRevisionLimit
	}
	return nil
}

func (x *BlueGreen) GetPrePromotionAnalysis() *CheckRun {
	if x != nil {
		return x.PrePromotionAnalysis
	}
	return nil
}

func (x *BlueGreen) GetAntiAffinity() *AntiAffinity {
	if x != nil {
		return x.AntiAffinity
	}
	return nil
}

func (x *BlueGreen) GetPostPromotionAnalysis() *CheckRun {
	if x != nil {
		return x.PostPromotionAnalysis
	}
	return nil
}

type AntiAffinity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreferredDuringSchedulingIgnoredDuringExecution *AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution `protobuf:"bytes,1,opt,name=preferredDuringSchedulingIgnoredDuringExecution,proto3" json:"preferredDuringSchedulingIgnoredDuringExecution,omitempty"`
	RequiredDuringSchedulingIgnoredDuringExecution  *AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution  `protobuf:"bytes,2,opt,name=requiredDuringSchedulingIgnoredDuringExecution,proto3" json:"requiredDuringSchedulingIgnoredDuringExecution,omitempty"`
}

func (x *AntiAffinity) Reset() {
	*x = AntiAffinity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntiAffinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiAffinity) ProtoMessage() {}

func (x *AntiAffinity) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiAffinity.ProtoReflect.Descriptor instead.
func (*AntiAffinity) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{3}
}

func (x *AntiAffinity) GetPreferredDuringSchedulingIgnoredDuringExecution() *AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution {
	if x != nil {
		return x.PreferredDuringSchedulingIgnoredDuringExecution
	}
	return nil
}

func (x *AntiAffinity) GetRequiredDuringSchedulingIgnoredDuringExecution() *AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution {
	if x != nil {
		return x.RequiredDuringSchedulingIgnoredDuringExecution
	}
	return nil
}

type IntOrPercent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ValPct:
	//	*IntOrPercent_Value
	//	*IntOrPercent_Percent
	ValPct isIntOrPercent_ValPct `protobuf_oneof:"val_pct"`
}

func (x *IntOrPercent) Reset() {
	*x = IntOrPercent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntOrPercent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntOrPercent) ProtoMessage() {}

func (x *IntOrPercent) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntOrPercent.ProtoReflect.Descriptor instead.
func (*IntOrPercent) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{4}
}

func (m *IntOrPercent) GetValPct() isIntOrPercent_ValPct {
	if m != nil {
		return m.ValPct
	}
	return nil
}

func (x *IntOrPercent) GetValue() uint32 {
	if x, ok := x.GetValPct().(*IntOrPercent_Value); ok {
		return x.Value
	}
	return 0
}

func (x *IntOrPercent) GetPercent() float64 {
	if x, ok := x.GetValPct().(*IntOrPercent_Percent); ok {
		return x.Percent
	}
	return 0
}

type isIntOrPercent_ValPct interface {
	isIntOrPercent_ValPct()
}

type IntOrPercent_Value struct {
	Value uint32 `protobuf:"varint,1,opt,name=value,proto3,oneof"`
}

type IntOrPercent_Percent struct {
	Percent float64 `protobuf:"fixed64,2,opt,name=percent,proto3,oneof"`
}

func (*IntOrPercent_Value) isIntOrPercent_ValPct() {}

func (*IntOrPercent_Percent) isIntOrPercent_ValPct() {}

type IntOrString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*IntOrString_IValue
	//	*IntOrString_SValue
	Value isIntOrString_Value `protobuf_oneof:"value"`
}

func (x *IntOrString) Reset() {
	*x = IntOrString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntOrString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntOrString) ProtoMessage() {}

func (x *IntOrString) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntOrString.ProtoReflect.Descriptor instead.
func (*IntOrString) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{5}
}

func (m *IntOrString) GetValue() isIntOrString_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *IntOrString) GetIValue() int32 {
	if x, ok := x.GetValue().(*IntOrString_IValue); ok {
		return x.IValue
	}
	return 0
}

func (x *IntOrString) GetSValue() string {
	if x, ok := x.GetValue().(*IntOrString_SValue); ok {
		return x.SValue
	}
	return ""
}

type isIntOrString_Value interface {
	isIntOrString_Value()
}

type IntOrString_IValue struct {
	IValue int32 `protobuf:"varint,1,opt,name=iValue,proto3,oneof"`
}

type IntOrString_SValue struct {
	SValue string `protobuf:"bytes,2,opt,name=sValue,proto3,oneof"`
}

func (*IntOrString_IValue) isIntOrString_Value() {}

func (*IntOrString_SValue) isIntOrString_Value() {}

// Canary: run a subset of instances, measure and if successful gradually increase instances
type Canary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanaryService  string                      `protobuf:"bytes,1,opt,name=canaryService,proto3" json:"canaryService,omitempty"`
	StableService  string                      `protobuf:"bytes,2,opt,name=stableService,proto3" json:"stableService,omitempty"`
	Steps          []*Canary_CanaryStep        `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
	MaxUnavailable *IntOrPercent               `protobuf:"bytes,5,opt,name=maxUnavailable,proto3" json:"maxUnavailable,omitempty"`
	MaxSurge       *IntOrPercent               `protobuf:"bytes,6,opt,name=maxSurge,proto3" json:"maxSurge,omitempty"`
	Analysis       *CheckRun                   `protobuf:"bytes,7,opt,name=analysis,proto3" json:"analysis,omitempty"`
	AntiAffinity   *AntiAffinity               `protobuf:"bytes,8,opt,name=antiAffinity,proto3" json:"antiAffinity,omitempty"`
	CanaryMetadata *Canary_PodTemplateMetadata `protobuf:"bytes,9,opt,name=canaryMetadata,proto3" json:"canaryMetadata,omitempty"`
	StableMetadata *Canary_PodTemplateMetadata `protobuf:"bytes,10,opt,name=stableMetadata,proto3" json:"stableMetadata,omitempty"`
}

func (x *Canary) Reset() {
	*x = Canary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Canary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Canary) ProtoMessage() {}

func (x *Canary) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Canary.ProtoReflect.Descriptor instead.
func (*Canary) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{6}
}

func (x *Canary) GetCanaryService() string {
	if x != nil {
		return x.CanaryService
	}
	return ""
}

func (x *Canary) GetStableService() string {
	if x != nil {
		return x.StableService
	}
	return ""
}

func (x *Canary) GetSteps() []*Canary_CanaryStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Canary) GetMaxUnavailable() *IntOrPercent {
	if x != nil {
		return x.MaxUnavailable
	}
	return nil
}

func (x *Canary) GetMaxSurge() *IntOrPercent {
	if x != nil {
		return x.MaxSurge
	}
	return nil
}

func (x *Canary) GetAnalysis() *CheckRun {
	if x != nil {
		return x.Analysis
	}
	return nil
}

func (x *Canary) GetAntiAffinity() *AntiAffinity {
	if x != nil {
		return x.AntiAffinity
	}
	return nil
}

func (x *Canary) GetCanaryMetadata() *Canary_PodTemplateMetadata {
	if x != nil {
		return x.CanaryMetadata
	}
	return nil
}

func (x *Canary) GetStableMetadata() *Canary_PodTemplateMetadata {
	if x != nil {
		return x.StableMetadata
	}
	return nil
}

// Gradually rolls out new replicas to the mix until complete
type RollingUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RollingUpdate) Reset() {
	*x = RollingUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollingUpdate) ProtoMessage() {}

func (x *RollingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollingUpdate.ProtoReflect.Descriptor instead.
func (*RollingUpdate) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{7}
}

// Rollback options
type Rollback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *Rollback) Reset() {
	*x = Rollback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rollback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rollback) ProtoMessage() {}

func (x *Rollback) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rollback.ProtoReflect.Descriptor instead.
func (*Rollback) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{8}
}

func (x *Rollback) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// When is the deployment stable?
type Stability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Stability) Reset() {
	*x = Stability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stability) ProtoMessage() {}

func (x *Stability) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stability.ProtoReflect.Descriptor instead.
func (*Stability) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{9}
}

type AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight int32 `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution) Reset() {
	*x = AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution) ProtoMessage() {}

func (x *AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution.ProtoReflect.Descriptor instead.
func (*AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution) Reset() {
	*x = AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution) ProtoMessage() {}

func (x *AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution.ProtoReflect.Descriptor instead.
func (*AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{3, 1}
}

type Canary_CanaryStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Step:
	//	*Canary_CanaryStep_SetWeight
	//	*Canary_CanaryStep_Pause
	//	*Canary_CanaryStep_Wait
	//	*Canary_CanaryStep_Experiment
	//	*Canary_CanaryStep_Analysis
	//	*Canary_CanaryStep_SetCanaryScale
	Step isCanary_CanaryStep_Step `protobuf_oneof:"step"`
}

func (x *Canary_CanaryStep) Reset() {
	*x = Canary_CanaryStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Canary_CanaryStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Canary_CanaryStep) ProtoMessage() {}

func (x *Canary_CanaryStep) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Canary_CanaryStep.ProtoReflect.Descriptor instead.
func (*Canary_CanaryStep) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{6, 0}
}

func (m *Canary_CanaryStep) GetStep() isCanary_CanaryStep_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (x *Canary_CanaryStep) GetSetWeight() *wrapperspb.Int32Value {
	if x, ok := x.GetStep().(*Canary_CanaryStep_SetWeight); ok {
		return x.SetWeight
	}
	return nil
}

func (x *Canary_CanaryStep) GetPause() *Canary_RolloutPause {
	if x, ok := x.GetStep().(*Canary_CanaryStep_Pause); ok {
		return x.Pause
	}
	return nil
}

func (x *Canary_CanaryStep) GetWait() *Canary_RolloutWait {
	if x, ok := x.GetStep().(*Canary_CanaryStep_Wait); ok {
		return x.Wait
	}
	return nil
}

func (x *Canary_CanaryStep) GetExperiment() *Canary_RolloutExperimentStep {
	if x, ok := x.GetStep().(*Canary_CanaryStep_Experiment); ok {
		return x.Experiment
	}
	return nil
}

func (x *Canary_CanaryStep) GetAnalysis() *CheckRun {
	if x, ok := x.GetStep().(*Canary_CanaryStep_Analysis); ok {
		return x.Analysis
	}
	return nil
}

func (x *Canary_CanaryStep) GetSetCanaryScale() *Canary_SetCanaryScale {
	if x, ok := x.GetStep().(*Canary_CanaryStep_SetCanaryScale); ok {
		return x.SetCanaryScale
	}
	return nil
}

type isCanary_CanaryStep_Step interface {
	isCanary_CanaryStep_Step()
}

type Canary_CanaryStep_SetWeight struct {
	SetWeight *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=setWeight,proto3,oneof"`
}

type Canary_CanaryStep_Pause struct {
	Pause *Canary_RolloutPause `protobuf:"bytes,2,opt,name=pause,proto3,oneof"`
}

type Canary_CanaryStep_Wait struct {
	Wait *Canary_RolloutWait `protobuf:"bytes,3,opt,name=wait,proto3,oneof"`
}

type Canary_CanaryStep_Experiment struct {
	Experiment *Canary_RolloutExperimentStep `protobuf:"bytes,4,opt,name=experiment,proto3,oneof"`
}

type Canary_CanaryStep_Analysis struct {
	Analysis *CheckRun `protobuf:"bytes,5,opt,name=analysis,proto3,oneof"`
}

type Canary_CanaryStep_SetCanaryScale struct {
	SetCanaryScale *Canary_SetCanaryScale `protobuf:"bytes,6,opt,name=setCanaryScale,proto3,oneof"`
}

func (*Canary_CanaryStep_SetWeight) isCanary_CanaryStep_Step() {}

func (*Canary_CanaryStep_Pause) isCanary_CanaryStep_Step() {}

func (*Canary_CanaryStep_Wait) isCanary_CanaryStep_Step() {}

func (*Canary_CanaryStep_Experiment) isCanary_CanaryStep_Step() {}

func (*Canary_CanaryStep_Analysis) isCanary_CanaryStep_Step() {}

func (*Canary_CanaryStep_SetCanaryScale) isCanary_CanaryStep_Step() {}

type Canary_RolloutWait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *IntOrString `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Canary_RolloutWait) Reset() {
	*x = Canary_RolloutWait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Canary_RolloutWait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Canary_RolloutWait) ProtoMessage() {}

func (x *Canary_RolloutWait) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Canary_RolloutWait.ProtoReflect.Descriptor instead.
func (*Canary_RolloutWait) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Canary_RolloutWait) GetDuration() *IntOrString {
	if x != nil {
		return x.Duration
	}
	return nil
}

type Canary_RolloutPause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Canary_RolloutPause) Reset() {
	*x = Canary_RolloutPause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Canary_RolloutPause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Canary_RolloutPause) ProtoMessage() {}

func (x *Canary_RolloutPause) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Canary_RolloutPause.ProtoReflect.Descriptor instead.
func (*Canary_RolloutPause) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{6, 2}
}

type Canary_RolloutExperimentStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*Canary_RolloutExperimentTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	// TODO make duration type
	Duration string      `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Analyses []*CheckRun `protobuf:"bytes,3,rep,name=analyses,proto3" json:"analyses,omitempty"`
}

func (x *Canary_RolloutExperimentStep) Reset() {
	*x = Canary_RolloutExperimentStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Canary_RolloutExperimentStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Canary_RolloutExperimentStep) ProtoMessage() {}

func (x *Canary_RolloutExperimentStep) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Canary_RolloutExperimentStep.ProtoReflect.Descriptor instead.
func (*Canary_RolloutExperimentStep) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{6, 3}
}

func (x *Canary_RolloutExperimentStep) GetTemplates() []*Canary_RolloutExperimentTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *Canary_RolloutExperimentStep) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Canary_RolloutExperimentStep) GetAnalyses() []*CheckRun {
	if x != nil {
		return x.Analyses
	}
	return nil
}

type Canary_SetCanaryScale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Scale:
	//	*Canary_SetCanaryScale_Weight
	//	*Canary_SetCanaryScale_Replicas
	Scale              isCanary_SetCanaryScale_Scale `protobuf_oneof:"scale"`
	MatchTrafficWeight bool                          `protobuf:"varint,3,opt,name=matchTrafficWeight,proto3" json:"matchTrafficWeight,omitempty"`
}

func (x *Canary_SetCanaryScale) Reset() {
	*x = Canary_SetCanaryScale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Canary_SetCanaryScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Canary_SetCanaryScale) ProtoMessage() {}

func (x *Canary_SetCanaryScale) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Canary_SetCanaryScale.ProtoReflect.Descriptor instead.
func (*Canary_SetCanaryScale) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{6, 4}
}

func (m *Canary_SetCanaryScale) GetScale() isCanary_SetCanaryScale_Scale {
	if m != nil {
		return m.Scale
	}
	return nil
}

func (x *Canary_SetCanaryScale) GetWeight() *wrapperspb.Int32Value {
	if x, ok := x.GetScale().(*Canary_SetCanaryScale_Weight); ok {
		return x.Weight
	}
	return nil
}

func (x *Canary_SetCanaryScale) GetReplicas() *wrapperspb.Int32Value {
	if x, ok := x.GetScale().(*Canary_SetCanaryScale_Replicas); ok {
		return x.Replicas
	}
	return nil
}

func (x *Canary_SetCanaryScale) GetMatchTrafficWeight() bool {
	if x != nil {
		return x.MatchTrafficWeight
	}
	return false
}

type isCanary_SetCanaryScale_Scale interface {
	isCanary_SetCanaryScale_Scale()
}

type Canary_SetCanaryScale_Weight struct {
	Weight *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=weight,proto3,oneof"`
}

type Canary_SetCanaryScale_Replicas struct {
	Replicas *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=replicas,proto3,oneof"`
}

func (*Canary_SetCanaryScale_Weight) isCanary_SetCanaryScale_Scale() {}

func (*Canary_SetCanaryScale_Replicas) isCanary_SetCanaryScale_Scale() {}

type Canary_PodTemplateMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels      map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations map[string]string `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Canary_PodTemplateMetadata) Reset() {
	*x = Canary_PodTemplateMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Canary_PodTemplateMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Canary_PodTemplateMetadata) ProtoMessage() {}

func (x *Canary_PodTemplateMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Canary_PodTemplateMetadata.ProtoReflect.Descriptor instead.
func (*Canary_PodTemplateMetadata) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{6, 5}
}

func (x *Canary_PodTemplateMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Canary_PodTemplateMetadata) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type Canary_RolloutExperimentTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SpecRef  string                      `protobuf:"bytes,2,opt,name=specRef,proto3" json:"specRef,omitempty"`
	Replicas *wrapperspb.Int32Value      `protobuf:"bytes,3,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Metadata *Canary_PodTemplateMetadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Selector *v1.LabelSelector           `protobuf:"bytes,5,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *Canary_RolloutExperimentTemplate) Reset() {
	*x = Canary_RolloutExperimentTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Canary_RolloutExperimentTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Canary_RolloutExperimentTemplate) ProtoMessage() {}

func (x *Canary_RolloutExperimentTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Canary_RolloutExperimentTemplate.ProtoReflect.Descriptor instead.
func (*Canary_RolloutExperimentTemplate) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{6, 6}
}

func (x *Canary_RolloutExperimentTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Canary_RolloutExperimentTemplate) GetSpecRef() string {
	if x != nil {
		return x.SpecRef
	}
	return ""
}

func (x *Canary_RolloutExperimentTemplate) GetReplicas() *wrapperspb.Int32Value {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *Canary_RolloutExperimentTemplate) GetMetadata() *Canary_PodTemplateMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Canary_RolloutExperimentTemplate) GetSelector() *v1.LabelSelector {
	if x != nil {
		return x.Selector
	}
	return nil
}

var File_strategy_proto protoreflect.FileDescriptor

var file_strategy_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2,
	0x03, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x0a, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x42, 0x6c, 0x75,
	0x65, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x47, 0x72,
	0x65, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x43,
	0x61, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x12,
	0x33, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x07, 0x72, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x09, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x40,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x2e, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x52, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x31, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x53,
	0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x09, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22,
	0xaa, 0x05, 0x0a, 0x09, 0x42, 0x6c, 0x75, 0x65, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x61, 0x75,
	0x74, 0x6f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x14, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x75,
	0x74, 0x6f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x51,
	0x0a, 0x15, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x15, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x5d, 0x0a, 0x1b, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x1b, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x45, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x75,
	0x6e, 0x52, 0x14, 0x70, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x61, 0x6e, 0x74, 0x69, 0x41,
	0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x61, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x15, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x15, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x22, 0xee, 0x03, 0x0a,
	0x0c, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0xb0, 0x01,
	0x0a, 0x2f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x2e, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64,
	0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x2f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0xad, 0x01, 0x0a, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x2e, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x49, 0x0a, 0x2f, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x30, 0x0a, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x75,
	0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a,
	0x0c, 0x49, 0x6e, 0x74, 0x4f, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x63, 0x74, 0x22, 0x4a, 0x0a, 0x0b,
	0x49, 0x6e, 0x74, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x06, 0x69,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x69,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x94, 0x0f, 0x0a, 0x06, 0x43, 0x61, 0x6e,
	0x61, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x61,
	0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x31, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79,
	0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x49, 0x6e, 0x74, 0x4f, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x72, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e,
	0x49, 0x6e, 0x74, 0x4f, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x53, 0x75, 0x72, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x08, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x61, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x52, 0x0c, 0x61, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x79, 0x12, 0x4c, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x64, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x0e, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x4c, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x82, 0x03,
	0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x74, 0x65, 0x70, 0x12, 0x3b, 0x0a, 0x09,
	0x73, 0x65, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x65, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x70, 0x61, 0x75,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f,
	0x75, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79,
	0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x57, 0x61, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x77, 0x61, 0x69, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f,
	0x75, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f,
	0x0a, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x75, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12,
	0x49, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e,
	0x61, 0x72, 0x79, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x43,
	0x61, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x1a, 0x40, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x57, 0x61, 0x69,
	0x74, 0x12, 0x31, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x49,
	0x6e, 0x74, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0e, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x1a, 0xac, 0x01, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x48,
	0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e,
	0x61, 0x72, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x65, 0x73, 0x1a, 0xbb, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x61, 0x72,
	0x79, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x39, 0x0a,
	0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x1a, 0xb3, 0x02, 0x0a, 0x13, 0x50, 0x6f, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x64, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x57, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x95, 0x02, 0x0a, 0x19, 0x52, 0x6f, 0x6c, 0x6c,
	0x6f, 0x75, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65,
	0x63, 0x52, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63,
	0x52, 0x65, 0x66, 0x12, 0x37, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x40, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79,
	0x2e, 0x50, 0x6f, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4f,
	0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22,
	0x0f, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x24, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x0b, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2d, 0x69, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64,
	0x65, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_strategy_proto_rawDescOnce sync.Once
	file_strategy_proto_rawDescData = file_strategy_proto_rawDesc
)

func file_strategy_proto_rawDescGZIP() []byte {
	file_strategy_proto_rawDescOnce.Do(func() {
		file_strategy_proto_rawDescData = protoimpl.X.CompressGZIP(file_strategy_proto_rawDescData)
	})
	return file_strategy_proto_rawDescData
}

var file_strategy_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_strategy_proto_goTypes = []interface{}{
	(*Strategy)(nil),      // 0: strategy.Strategy
	(*Recreate)(nil),      // 1: strategy.Recreate
	(*BlueGreen)(nil),     // 2: strategy.BlueGreen
	(*AntiAffinity)(nil),  // 3: strategy.AntiAffinity
	(*IntOrPercent)(nil),  // 4: strategy.IntOrPercent
	(*IntOrString)(nil),   // 5: strategy.IntOrString
	(*Canary)(nil),        // 6: strategy.Canary
	(*RollingUpdate)(nil), // 7: strategy.RollingUpdate
	(*Rollback)(nil),      // 8: strategy.Rollback
	(*Stability)(nil),     // 9: strategy.Stability
	(*AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution)(nil), // 10: strategy.AntiAffinity.PreferredDuringSchedulingIgnoredDuringExecution
	(*AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution)(nil),  // 11: strategy.AntiAffinity.RequiredDuringSchedulingIgnoredDuringExecution
	(*Canary_CanaryStep)(nil),                // 12: strategy.Canary.CanaryStep
	(*Canary_RolloutWait)(nil),               // 13: strategy.Canary.RolloutWait
	(*Canary_RolloutPause)(nil),              // 14: strategy.Canary.RolloutPause
	(*Canary_RolloutExperimentStep)(nil),     // 15: strategy.Canary.RolloutExperimentStep
	(*Canary_SetCanaryScale)(nil),            // 16: strategy.Canary.SetCanaryScale
	(*Canary_PodTemplateMetadata)(nil),       // 17: strategy.Canary.PodTemplateMetadata
	(*Canary_RolloutExperimentTemplate)(nil), // 18: strategy.Canary.RolloutExperimentTemplate
	nil,                                      // 19: strategy.Canary.PodTemplateMetadata.LabelsEntry
	nil,                                      // 20: strategy.Canary.PodTemplateMetadata.AnnotationsEntry
	(*TrafficRouting)(nil),                   // 21: traffic.TrafficRouting
	(*Check)(nil),                            // 22: success.Check
	(*wrapperspb.Int32Value)(nil),            // 23: google.protobuf.Int32Value
	(*wrapperspb.BoolValue)(nil),             // 24: google.protobuf.BoolValue
	(*CheckRun)(nil),                         // 25: success.CheckRun
	(*v1.LabelSelector)(nil),                 // 26: k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
}
var file_strategy_proto_depIdxs = []int32{
	1,  // 0: strategy.Strategy.recreate:type_name -> strategy.Recreate
	2,  // 1: strategy.Strategy.blue_green:type_name -> strategy.BlueGreen
	6,  // 2: strategy.Strategy.canary:type_name -> strategy.Canary
	7,  // 3: strategy.Strategy.rolling:type_name -> strategy.RollingUpdate
	21, // 4: strategy.Strategy.traffic_routing:type_name -> traffic.TrafficRouting
	8,  // 5: strategy.Strategy.rollback:type_name -> strategy.Rollback
	9,  // 6: strategy.Strategy.stability:type_name -> strategy.Stability
	22, // 7: strategy.Strategy.checks:type_name -> success.Check
	23, // 8: strategy.BlueGreen.previewReplicaCount:type_name -> google.protobuf.Int32Value
	24, // 9: strategy.BlueGreen.autoPromotionEnabled:type_name -> google.protobuf.BoolValue
	23, // 10: strategy.BlueGreen.scaleDownDelaySeconds:type_name -> google.protobuf.Int32Value
	23, // 11: strategy.BlueGreen.scaleDownDelayRevisionLimit:type_name -> google.protobuf.Int32Value
	25, // 12: strategy.BlueGreen.prePromotionAnalysis:type_name -> success.CheckRun
	3,  // 13: strategy.BlueGreen.antiAffinity:type_name -> strategy.AntiAffinity
	25, // 14: strategy.BlueGreen.postPromotionAnalysis:type_name -> success.CheckRun
	10, // 15: strategy.AntiAffinity.preferredDuringSchedulingIgnoredDuringExecution:type_name -> strategy.AntiAffinity.PreferredDuringSchedulingIgnoredDuringExecution
	11, // 16: strategy.AntiAffinity.requiredDuringSchedulingIgnoredDuringExecution:type_name -> strategy.AntiAffinity.RequiredDuringSchedulingIgnoredDuringExecution
	12, // 17: strategy.Canary.steps:type_name -> strategy.Canary.CanaryStep
	4,  // 18: strategy.Canary.maxUnavailable:type_name -> strategy.IntOrPercent
	4,  // 19: strategy.Canary.maxSurge:type_name -> strategy.IntOrPercent
	25, // 20: strategy.Canary.analysis:type_name -> success.CheckRun
	3,  // 21: strategy.Canary.antiAffinity:type_name -> strategy.AntiAffinity
	17, // 22: strategy.Canary.canaryMetadata:type_name -> strategy.Canary.PodTemplateMetadata
	17, // 23: strategy.Canary.stableMetadata:type_name -> strategy.Canary.PodTemplateMetadata
	23, // 24: strategy.Canary.CanaryStep.setWeight:type_name -> google.protobuf.Int32Value
	14, // 25: strategy.Canary.CanaryStep.pause:type_name -> strategy.Canary.RolloutPause
	13, // 26: strategy.Canary.CanaryStep.wait:type_name -> strategy.Canary.RolloutWait
	15, // 27: strategy.Canary.CanaryStep.experiment:type_name -> strategy.Canary.RolloutExperimentStep
	25, // 28: strategy.Canary.CanaryStep.analysis:type_name -> success.CheckRun
	16, // 29: strategy.Canary.CanaryStep.setCanaryScale:type_name -> strategy.Canary.SetCanaryScale
	5,  // 30: strategy.Canary.RolloutWait.duration:type_name -> strategy.IntOrString
	18, // 31: strategy.Canary.RolloutExperimentStep.templates:type_name -> strategy.Canary.RolloutExperimentTemplate
	25, // 32: strategy.Canary.RolloutExperimentStep.analyses:type_name -> success.CheckRun
	23, // 33: strategy.Canary.SetCanaryScale.weight:type_name -> google.protobuf.Int32Value
	23, // 34: strategy.Canary.SetCanaryScale.replicas:type_name -> google.protobuf.Int32Value
	19, // 35: strategy.Canary.PodTemplateMetadata.labels:type_name -> strategy.Canary.PodTemplateMetadata.LabelsEntry
	20, // 36: strategy.Canary.PodTemplateMetadata.annotations:type_name -> strategy.Canary.PodTemplateMetadata.AnnotationsEntry
	23, // 37: strategy.Canary.RolloutExperimentTemplate.replicas:type_name -> google.protobuf.Int32Value
	17, // 38: strategy.Canary.RolloutExperimentTemplate.metadata:type_name -> strategy.Canary.PodTemplateMetadata
	26, // 39: strategy.Canary.RolloutExperimentTemplate.selector:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_strategy_proto_init() }
func file_strategy_proto_init() {
	if File_strategy_proto != nil {
		return
	}
	file_success_proto_init()
	file_traffic_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_strategy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlueGreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntiAffinity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntOrPercent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntOrString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Canary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollingUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rollback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntiAffinity_PreferredDuringSchedulingIgnoredDuringExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntiAffinity_RequiredDuringSchedulingIgnoredDuringExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Canary_CanaryStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Canary_RolloutWait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Canary_RolloutPause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Canary_RolloutExperimentStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Canary_SetCanaryScale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Canary_PodTemplateMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Canary_RolloutExperimentTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_strategy_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Strategy_Recreate)(nil),
		(*Strategy_BlueGreen)(nil),
		(*Strategy_Canary)(nil),
		(*Strategy_Rolling)(nil),
		(*Strategy_Versioned)(nil),
		(*Strategy_Update)(nil),
	}
	file_strategy_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*IntOrPercent_Value)(nil),
		(*IntOrPercent_Percent)(nil),
	}
	file_strategy_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*IntOrString_IValue)(nil),
		(*IntOrString_SValue)(nil),
	}
	file_strategy_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Canary_CanaryStep_SetWeight)(nil),
		(*Canary_CanaryStep_Pause)(nil),
		(*Canary_CanaryStep_Wait)(nil),
		(*Canary_CanaryStep_Experiment)(nil),
		(*Canary_CanaryStep_Analysis)(nil),
		(*Canary_CanaryStep_SetCanaryScale)(nil),
	}
	file_strategy_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*Canary_SetCanaryScale_Weight)(nil),
		(*Canary_SetCanaryScale_Replicas)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strategy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_strategy_proto_goTypes,
		DependencyIndexes: file_strategy_proto_depIdxs,
		MessageInfos:      file_strategy_proto_msgTypes,
	}.Build()
	File_strategy_proto = out.File
	file_strategy_proto_rawDesc = nil
	file_strategy_proto_goTypes = nil
	file_strategy_proto_depIdxs = nil
}
