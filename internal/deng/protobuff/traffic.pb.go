// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.17.3
// source: traffic.proto

package protobuff

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrafficRouting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Traffic:
	//	*TrafficRouting_Istio
	//	*TrafficRouting_Nginx
	//	*TrafficRouting_Alb
	//	*TrafficRouting_Smi
	Traffic isTrafficRouting_Traffic `protobuf_oneof:"traffic"`
}

func (x *TrafficRouting) Reset() {
	*x = TrafficRouting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficRouting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficRouting) ProtoMessage() {}

func (x *TrafficRouting) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficRouting.ProtoReflect.Descriptor instead.
func (*TrafficRouting) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{0}
}

func (m *TrafficRouting) GetTraffic() isTrafficRouting_Traffic {
	if m != nil {
		return m.Traffic
	}
	return nil
}

func (x *TrafficRouting) GetIstio() *IstioTrafficRouting {
	if x, ok := x.GetTraffic().(*TrafficRouting_Istio); ok {
		return x.Istio
	}
	return nil
}

func (x *TrafficRouting) GetNginx() *NginxTrafficRouting {
	if x, ok := x.GetTraffic().(*TrafficRouting_Nginx); ok {
		return x.Nginx
	}
	return nil
}

func (x *TrafficRouting) GetAlb() *ALBTrafficRouting {
	if x, ok := x.GetTraffic().(*TrafficRouting_Alb); ok {
		return x.Alb
	}
	return nil
}

func (x *TrafficRouting) GetSmi() *SMITrafficRouting {
	if x, ok := x.GetTraffic().(*TrafficRouting_Smi); ok {
		return x.Smi
	}
	return nil
}

type isTrafficRouting_Traffic interface {
	isTrafficRouting_Traffic()
}

type TrafficRouting_Istio struct {
	Istio *IstioTrafficRouting `protobuf:"bytes,1,opt,name=istio,proto3,oneof"`
}

type TrafficRouting_Nginx struct {
	Nginx *NginxTrafficRouting `protobuf:"bytes,2,opt,name=nginx,proto3,oneof"`
}

type TrafficRouting_Alb struct {
	Alb *ALBTrafficRouting `protobuf:"bytes,3,opt,name=alb,proto3,oneof"`
}

type TrafficRouting_Smi struct {
	Smi *SMITrafficRouting `protobuf:"bytes,4,opt,name=smi,proto3,oneof"`
}

func (*TrafficRouting_Istio) isTrafficRouting_Traffic() {}

func (*TrafficRouting_Nginx) isTrafficRouting_Traffic() {}

func (*TrafficRouting_Alb) isTrafficRouting_Traffic() {}

func (*TrafficRouting_Smi) isTrafficRouting_Traffic() {}

type IstioTrafficRouting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualService *IstioVirtualService `protobuf:"bytes,1,opt,name=virtualService,proto3" json:"virtualService,omitempty"`
}

func (x *IstioTrafficRouting) Reset() {
	*x = IstioTrafficRouting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IstioTrafficRouting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IstioTrafficRouting) ProtoMessage() {}

func (x *IstioTrafficRouting) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IstioTrafficRouting.ProtoReflect.Descriptor instead.
func (*IstioTrafficRouting) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{1}
}

func (x *IstioTrafficRouting) GetVirtualService() *IstioVirtualService {
	if x != nil {
		return x.VirtualService
	}
	return nil
}

// IstioVirtualService holds information on the virtual service the rollout needs to modify
type IstioVirtualService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Routes []string `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *IstioVirtualService) Reset() {
	*x = IstioVirtualService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IstioVirtualService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IstioVirtualService) ProtoMessage() {}

func (x *IstioVirtualService) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IstioVirtualService.ProtoReflect.Descriptor instead.
func (*IstioVirtualService) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{2}
}

func (x *IstioVirtualService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IstioVirtualService) GetRoutes() []string {
	if x != nil {
		return x.Routes
	}
	return nil
}

type NginxTrafficRouting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnnotationPrefix             string            `protobuf:"bytes,1,opt,name=annotationPrefix,proto3" json:"annotationPrefix,omitempty"`
	StableIngress                string            `protobuf:"bytes,2,opt,name=stableIngress,proto3" json:"stableIngress,omitempty"`
	AdditionalIngressAnnotations map[string]string `protobuf:"bytes,3,rep,name=additionalIngressAnnotations,proto3" json:"additionalIngressAnnotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NginxTrafficRouting) Reset() {
	*x = NginxTrafficRouting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NginxTrafficRouting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NginxTrafficRouting) ProtoMessage() {}

func (x *NginxTrafficRouting) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NginxTrafficRouting.ProtoReflect.Descriptor instead.
func (*NginxTrafficRouting) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{3}
}

func (x *NginxTrafficRouting) GetAnnotationPrefix() string {
	if x != nil {
		return x.AnnotationPrefix
	}
	return ""
}

func (x *NginxTrafficRouting) GetStableIngress() string {
	if x != nil {
		return x.StableIngress
	}
	return ""
}

func (x *NginxTrafficRouting) GetAdditionalIngressAnnotations() map[string]string {
	if x != nil {
		return x.AdditionalIngressAnnotations
	}
	return nil
}

type ALBTrafficRouting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingress          string `protobuf:"bytes,1,opt,name=ingress,proto3" json:"ingress,omitempty"`
	ServicePort      int32  `protobuf:"varint,2,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
	RootService      string `protobuf:"bytes,3,opt,name=rootService,proto3" json:"rootService,omitempty"`
	AnnotationPrefix string `protobuf:"bytes,4,opt,name=annotationPrefix,proto3" json:"annotationPrefix,omitempty"`
}

func (x *ALBTrafficRouting) Reset() {
	*x = ALBTrafficRouting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ALBTrafficRouting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ALBTrafficRouting) ProtoMessage() {}

func (x *ALBTrafficRouting) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ALBTrafficRouting.ProtoReflect.Descriptor instead.
func (*ALBTrafficRouting) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{4}
}

func (x *ALBTrafficRouting) GetIngress() string {
	if x != nil {
		return x.Ingress
	}
	return ""
}

func (x *ALBTrafficRouting) GetServicePort() int32 {
	if x != nil {
		return x.ServicePort
	}
	return 0
}

func (x *ALBTrafficRouting) GetRootService() string {
	if x != nil {
		return x.RootService
	}
	return ""
}

func (x *ALBTrafficRouting) GetAnnotationPrefix() string {
	if x != nil {
		return x.AnnotationPrefix
	}
	return ""
}

type SMITrafficRouting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootService      string `protobuf:"bytes,1,opt,name=rootService,proto3" json:"rootService,omitempty"`
	TrafficSplitName string `protobuf:"bytes,2,opt,name=trafficSplitName,proto3" json:"trafficSplitName,omitempty"`
}

func (x *SMITrafficRouting) Reset() {
	*x = SMITrafficRouting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMITrafficRouting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMITrafficRouting) ProtoMessage() {}

func (x *SMITrafficRouting) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMITrafficRouting.ProtoReflect.Descriptor instead.
func (*SMITrafficRouting) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{5}
}

func (x *SMITrafficRouting) GetRootService() string {
	if x != nil {
		return x.RootService
	}
	return ""
}

func (x *SMITrafficRouting) GetTrafficSplitName() string {
	if x != nil {
		return x.TrafficSplitName
	}
	return ""
}

var File_traffic_proto protoreflect.FileDescriptor

var file_traffic_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0xe7, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x05, 0x69,
	0x73, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x2e, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x05, 0x69, 0x73, 0x74, 0x69,
	0x6f, 0x12, 0x34, 0x0a, 0x05, 0x6e, 0x67, 0x69, 0x6e, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x4e, 0x67, 0x69, 0x6e, 0x78,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x05, 0x6e, 0x67, 0x69, 0x6e, 0x78, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x6c, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x41,
	0x4c, 0x42, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x62, 0x12, 0x2e, 0x0a, 0x03, 0x73, 0x6d, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x53,
	0x4d, 0x49, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x03, 0x73, 0x6d, 0x69, 0x42, 0x09, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x22, 0x5b, 0x0a, 0x13, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x44, 0x0a, 0x0e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x49, 0x73, 0x74, 0x69,
	0x6f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x0e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22,
	0x41, 0x0a, 0x13, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x22, 0xbd, 0x02, 0x0a, 0x13, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x82, 0x01, 0x0a,
	0x1c, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x4e, 0x67,
	0x69, 0x6e, 0x78, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x1c, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x4f, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x41, 0x4c, 0x42, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x6f, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x22, 0x61, 0x0a, 0x11, 0x53, 0x4d, 0x49, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f,
	0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2d, 0x69, 0x6f, 0x2f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x64, 0x65, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_traffic_proto_rawDescOnce sync.Once
	file_traffic_proto_rawDescData = file_traffic_proto_rawDesc
)

func file_traffic_proto_rawDescGZIP() []byte {
	file_traffic_proto_rawDescOnce.Do(func() {
		file_traffic_proto_rawDescData = protoimpl.X.CompressGZIP(file_traffic_proto_rawDescData)
	})
	return file_traffic_proto_rawDescData
}

var file_traffic_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_traffic_proto_goTypes = []interface{}{
	(*TrafficRouting)(nil),      // 0: traffic.TrafficRouting
	(*IstioTrafficRouting)(nil), // 1: traffic.IstioTrafficRouting
	(*IstioVirtualService)(nil), // 2: traffic.IstioVirtualService
	(*NginxTrafficRouting)(nil), // 3: traffic.NginxTrafficRouting
	(*ALBTrafficRouting)(nil),   // 4: traffic.ALBTrafficRouting
	(*SMITrafficRouting)(nil),   // 5: traffic.SMITrafficRouting
	nil,                         // 6: traffic.NginxTrafficRouting.AdditionalIngressAnnotationsEntry
}
var file_traffic_proto_depIdxs = []int32{
	1, // 0: traffic.TrafficRouting.istio:type_name -> traffic.IstioTrafficRouting
	3, // 1: traffic.TrafficRouting.nginx:type_name -> traffic.NginxTrafficRouting
	4, // 2: traffic.TrafficRouting.alb:type_name -> traffic.ALBTrafficRouting
	5, // 3: traffic.TrafficRouting.smi:type_name -> traffic.SMITrafficRouting
	2, // 4: traffic.IstioTrafficRouting.virtualService:type_name -> traffic.IstioVirtualService
	6, // 5: traffic.NginxTrafficRouting.additionalIngressAnnotations:type_name -> traffic.NginxTrafficRouting.AdditionalIngressAnnotationsEntry
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_traffic_proto_init() }
func file_traffic_proto_init() {
	if File_traffic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_traffic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficRouting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IstioTrafficRouting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IstioVirtualService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NginxTrafficRouting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ALBTrafficRouting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMITrafficRouting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_traffic_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TrafficRouting_Istio)(nil),
		(*TrafficRouting_Nginx)(nil),
		(*TrafficRouting_Alb)(nil),
		(*TrafficRouting_Smi)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_traffic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_traffic_proto_goTypes,
		DependencyIndexes: file_traffic_proto_depIdxs,
		MessageInfos:      file_traffic_proto_msgTypes,
	}.Build()
	File_traffic_proto = out.File
	file_traffic_proto_rawDesc = nil
	file_traffic_proto_goTypes = nil
	file_traffic_proto_depIdxs = nil
}
