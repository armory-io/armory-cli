// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.17.3
// source: artifact.proto

package protobuff

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AWSObject_EmbeddedType int32

const (
	// See https://docs.aws.amazon.com/sdk-for-go/api/service/cloudformation/#CloudFormation.ValidateTemplate
	AWSObject_CLOUDFORMATION            AWSObject_EmbeddedType = 0
	AWSObject_CLOUDFORMATION_TEMPLATE   AWSObject_EmbeddedType = 1
	AWSObject_LAUNCH_TEMPLATE_REFERENCE AWSObject_EmbeddedType = 2
	// See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html
	AWSObject_LAUNCH_TEMPLATE AWSObject_EmbeddedType = 3
)

// Enum value maps for AWSObject_EmbeddedType.
var (
	AWSObject_EmbeddedType_name = map[int32]string{
		0: "CLOUDFORMATION",
		1: "CLOUDFORMATION_TEMPLATE",
		2: "LAUNCH_TEMPLATE_REFERENCE",
		3: "LAUNCH_TEMPLATE",
	}
	AWSObject_EmbeddedType_value = map[string]int32{
		"CLOUDFORMATION":            0,
		"CLOUDFORMATION_TEMPLATE":   1,
		"LAUNCH_TEMPLATE_REFERENCE": 2,
		"LAUNCH_TEMPLATE":           3,
	}
)

func (x AWSObject_EmbeddedType) Enum() *AWSObject_EmbeddedType {
	p := new(AWSObject_EmbeddedType)
	*p = x
	return p
}

func (x AWSObject_EmbeddedType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AWSObject_EmbeddedType) Descriptor() protoreflect.EnumDescriptor {
	return file_artifact_proto_enumTypes[0].Descriptor()
}

func (AWSObject_EmbeddedType) Type() protoreflect.EnumType {
	return &file_artifact_proto_enumTypes[0]
}

func (x AWSObject_EmbeddedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AWSObject_EmbeddedType.Descriptor instead.
func (AWSObject_EmbeddedType) EnumDescriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{8, 0}
}

type Artifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Provider:
	//	*Artifact_Kubernetes
	//	*Artifact_Aws
	Provider isArtifact_Provider `protobuf_oneof:"provider"`
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{0}
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Artifact) GetProvider() isArtifact_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *Artifact) GetKubernetes() *KubernetesArtifact {
	if x, ok := x.GetProvider().(*Artifact_Kubernetes); ok {
		return x.Kubernetes
	}
	return nil
}

func (x *Artifact) GetAws() *AWSArtifact {
	if x, ok := x.GetProvider().(*Artifact_Aws); ok {
		return x.Aws
	}
	return nil
}

type isArtifact_Provider interface {
	isArtifact_Provider()
}

type Artifact_Kubernetes struct {
	Kubernetes *KubernetesArtifact `protobuf:"bytes,2,opt,name=kubernetes,proto3,oneof"`
}

type Artifact_Aws struct {
	Aws *AWSArtifact `protobuf:"bytes,3,opt,name=aws,proto3,oneof"`
}

func (*Artifact_Kubernetes) isArtifact_Provider() {}

func (*Artifact_Aws) isArtifact_Provider() {}

type KubernetesArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*KubernetesArtifact_Kustomize
	//	*KubernetesArtifact_Manifests
	//	*KubernetesArtifact_Helm
	Type     isKubernetesArtifact_Type `protobuf_oneof:"type"`
	Versions map[string]string         `protobuf:"bytes,5,rep,name=versions,proto3" json:"versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *KubernetesArtifact) Reset() {
	*x = KubernetesArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesArtifact) ProtoMessage() {}

func (x *KubernetesArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesArtifact.ProtoReflect.Descriptor instead.
func (*KubernetesArtifact) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{1}
}

func (m *KubernetesArtifact) GetType() isKubernetesArtifact_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *KubernetesArtifact) GetKustomize() *KustomizeArtifact {
	if x, ok := x.GetType().(*KubernetesArtifact_Kustomize); ok {
		return x.Kustomize
	}
	return nil
}

func (x *KubernetesArtifact) GetManifests() *ManifestsArtifact {
	if x, ok := x.GetType().(*KubernetesArtifact_Manifests); ok {
		return x.Manifests
	}
	return nil
}

func (x *KubernetesArtifact) GetHelm() *HelmArtifact {
	if x, ok := x.GetType().(*KubernetesArtifact_Helm); ok {
		return x.Helm
	}
	return nil
}

func (x *KubernetesArtifact) GetVersions() map[string]string {
	if x != nil {
		return x.Versions
	}
	return nil
}

type isKubernetesArtifact_Type interface {
	isKubernetesArtifact_Type()
}

type KubernetesArtifact_Kustomize struct {
	Kustomize *KustomizeArtifact `protobuf:"bytes,1,opt,name=kustomize,proto3,oneof"`
}

type KubernetesArtifact_Manifests struct {
	Manifests *ManifestsArtifact `protobuf:"bytes,2,opt,name=manifests,proto3,oneof"`
}

type KubernetesArtifact_Helm struct {
	Helm *HelmArtifact `protobuf:"bytes,3,opt,name=helm,proto3,oneof"`
}

func (*KubernetesArtifact_Kustomize) isKubernetesArtifact_Type() {}

func (*KubernetesArtifact_Manifests) isKubernetesArtifact_Type() {}

func (*KubernetesArtifact_Helm) isKubernetesArtifact_Type() {}

// ArtifactSource: where we get the data from
type ArtifactSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string              `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Get      *ArtifactSource_Get `protobuf:"bytes,2,opt,name=get,proto3" json:"get,omitempty"`
	Via      *Via                `protobuf:"bytes,3,opt,name=via,proto3" json:"via,omitempty"`
	Provided *anypb.Any          `protobuf:"bytes,4,opt,name=provided,proto3" json:"provided,omitempty"`
}

func (x *ArtifactSource) Reset() {
	*x = ArtifactSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactSource) ProtoMessage() {}

func (x *ArtifactSource) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactSource.ProtoReflect.Descriptor instead.
func (*ArtifactSource) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{2}
}

func (x *ArtifactSource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ArtifactSource) GetGet() *ArtifactSource_Get {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *ArtifactSource) GetVia() *Via {
	if x != nil {
		return x.Via
	}
	return nil
}

func (x *ArtifactSource) GetProvided() *anypb.Any {
	if x != nil {
		return x.Provided
	}
	return nil
}

// Potential artifact payload
// could also be the protobuf of the object
type ArtifactPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ArtifactPayload) Reset() {
	*x = ArtifactPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactPayload) ProtoMessage() {}

func (x *ArtifactPayload) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactPayload.ProtoReflect.Descriptor instead.
func (*ArtifactPayload) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{3}
}

func (x *ArtifactPayload) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Kustomization
type KustomizeArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *ArtifactSource `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *KustomizeArtifact) Reset() {
	*x = KustomizeArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KustomizeArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeArtifact) ProtoMessage() {}

func (x *KustomizeArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeArtifact.ProtoReflect.Descriptor instead.
func (*KustomizeArtifact) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{4}
}

func (x *KustomizeArtifact) GetSource() *ArtifactSource {
	if x != nil {
		return x.Source
	}
	return nil
}

// Direct manifests in JSON or YAML
type ManifestsArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *ArtifactSource `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *ManifestsArtifact) Reset() {
	*x = ManifestsArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManifestsArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestsArtifact) ProtoMessage() {}

func (x *ManifestsArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestsArtifact.ProtoReflect.Descriptor instead.
func (*ManifestsArtifact) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{5}
}

func (x *ManifestsArtifact) GetSource() *ArtifactSource {
	if x != nil {
		return x.Source
	}
	return nil
}

// Helm chart to run
type HelmArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source  *ArtifactSource `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Version string          `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *HelmArtifact) Reset() {
	*x = HelmArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmArtifact) ProtoMessage() {}

func (x *HelmArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmArtifact.ProtoReflect.Descriptor instead.
func (*HelmArtifact) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{6}
}

func (x *HelmArtifact) GetSource() *ArtifactSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *HelmArtifact) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// AWS specific artifacts
type AWSArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// either an AMI or an arbitrary AWS object
	//
	// Types that are assignable to Type:
	//	*AWSArtifact_Ec2
	//	*AWSArtifact_Object
	Type isAWSArtifact_Type `protobuf_oneof:"type"`
}

func (x *AWSArtifact) Reset() {
	*x = AWSArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSArtifact) ProtoMessage() {}

func (x *AWSArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSArtifact.ProtoReflect.Descriptor instead.
func (*AWSArtifact) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{7}
}

func (m *AWSArtifact) GetType() isAWSArtifact_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *AWSArtifact) GetEc2() *AMIArtifact {
	if x, ok := x.GetType().(*AWSArtifact_Ec2); ok {
		return x.Ec2
	}
	return nil
}

func (x *AWSArtifact) GetObject() *AWSObject {
	if x, ok := x.GetType().(*AWSArtifact_Object); ok {
		return x.Object
	}
	return nil
}

type isAWSArtifact_Type interface {
	isAWSArtifact_Type()
}

type AWSArtifact_Ec2 struct {
	Ec2 *AMIArtifact `protobuf:"bytes,1,opt,name=ec2,proto3,oneof"`
}

type AWSArtifact_Object struct {
	Object *AWSObject `protobuf:"bytes,2,opt,name=object,proto3,oneof"`
}

func (*AWSArtifact_Ec2) isAWSArtifact_Type() {}

func (*AWSArtifact_Object) isAWSArtifact_Type() {}

// AWSObject represents the definition of an AWS object. It can
// be given as CloudFormation, launch template, etc.
// We don't have (or haven't found) a reliable protobuf definition
// for AWS SDK objects.
type AWSObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       AWSObject_EmbeddedType `protobuf:"varint,1,opt,name=type,proto3,enum=artifact.AWSObject_EmbeddedType" json:"type,omitempty"`
	Definition *structpb.Struct       `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *AWSObject) Reset() {
	*x = AWSObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSObject) ProtoMessage() {}

func (x *AWSObject) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSObject.ProtoReflect.Descriptor instead.
func (*AWSObject) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{8}
}

func (x *AWSObject) GetType() AWSObject_EmbeddedType {
	if x != nil {
		return x.Type
	}
	return AWSObject_CLOUDFORMATION
}

func (x *AWSObject) GetDefinition() *structpb.Struct {
	if x != nil {
		return x.Definition
	}
	return nil
}

// AMIArtifact represents an AMI reference either direct (= ID)
// or with parameters to resolve at runtime.
type AMIArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Image:
	//	*AMIArtifact_AmiId
	//	*AMIArtifact_Params
	Image isAMIArtifact_Image `protobuf_oneof:"image"`
}

func (x *AMIArtifact) Reset() {
	*x = AMIArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMIArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMIArtifact) ProtoMessage() {}

func (x *AMIArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMIArtifact.ProtoReflect.Descriptor instead.
func (*AMIArtifact) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{9}
}

func (m *AMIArtifact) GetImage() isAMIArtifact_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (x *AMIArtifact) GetAmiId() string {
	if x, ok := x.GetImage().(*AMIArtifact_AmiId); ok {
		return x.AmiId
	}
	return ""
}

func (x *AMIArtifact) GetParams() *AMIArtifact_ImageFinder {
	if x, ok := x.GetImage().(*AMIArtifact_Params); ok {
		return x.Params
	}
	return nil
}

type isAMIArtifact_Image interface {
	isAMIArtifact_Image()
}

type AMIArtifact_AmiId struct {
	AmiId string `protobuf:"bytes,1,opt,name=ami_id,json=amiId,proto3,oneof"`
}

type AMIArtifact_Params struct {
	Params *AMIArtifact_ImageFinder `protobuf:"bytes,2,opt,name=params,proto3,oneof"`
}

func (*AMIArtifact_AmiId) isAMIArtifact_Image() {}

func (*AMIArtifact_Params) isAMIArtifact_Image() {}

type ArtifactSource_Get struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Url     string            `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Branch  string            `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	Path    string            `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Headers map[string]string `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ArtifactSource_Get) Reset() {
	*x = ArtifactSource_Get{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactSource_Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactSource_Get) ProtoMessage() {}

func (x *ArtifactSource_Get) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactSource_Get.ProtoReflect.Descriptor instead.
func (*ArtifactSource_Get) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ArtifactSource_Get) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ArtifactSource_Get) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ArtifactSource_Get) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *ArtifactSource_Get) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ArtifactSource_Get) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type AMIArtifact_ImageFinder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package string            `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	Regions []string          `protobuf:"bytes,2,rep,name=regions,proto3" json:"regions,omitempty"`
	Tags    map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AMIArtifact_ImageFinder) Reset() {
	*x = AMIArtifact_ImageFinder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMIArtifact_ImageFinder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMIArtifact_ImageFinder) ProtoMessage() {}

func (x *AMIArtifact_ImageFinder) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMIArtifact_ImageFinder.ProtoReflect.Descriptor instead.
func (*AMIArtifact_ImageFinder) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{9, 0}
}

func (x *AMIArtifact_ImageFinder) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *AMIArtifact_ImageFinder) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

func (x *AMIArtifact_ImageFinder) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_artifact_proto protoreflect.FileDescriptor

var file_artifact_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x95, 0x01, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x12, 0x29, 0x0a, 0x03, 0x61, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x41, 0x57, 0x53, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x03, 0x61, 0x77, 0x73, 0x42, 0x0a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xc9, 0x02, 0x0a, 0x12, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x12, 0x3b, 0x0a, 0x09, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x4b,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x12, 0x3b, 0x0a,
	0x09, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x73, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x68, 0x65,
	0x6c, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x6d, 0x12, 0x46, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x3b, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x03, 0x67, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x03, 0x76, 0x69,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x56, 0x69, 0x61, 0x52, 0x03, 0x76, 0x69, 0x61, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x1a, 0xd8, 0x01, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x43, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2b, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12,
	0x30, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x5a, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a,
	0x0b, 0x41, 0x57, 0x53, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x03,
	0x65, 0x63, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x2e, 0x41, 0x4d, 0x49, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x63, 0x32, 0x12, 0x2d, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x2e, 0x41, 0x57, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xef,
	0x01, 0x0a, 0x09, 0x41, 0x57, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x34, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x41, 0x57, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x0c, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x43,
	0x4c, 0x4f, 0x55, 0x44, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f,
	0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4c,
	0x41, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x03,
	0x22, 0xaa, 0x02, 0x0a, 0x0b, 0x41, 0x4d, 0x49, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x12, 0x17, 0x0a, 0x06, 0x61, 0x6d, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x61, 0x6d, 0x69, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x2e, 0x41, 0x4d, 0x49, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0xbb, 0x01, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x46, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2e, 0x41, 0x4d, 0x49, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x2e, 0x5a,
	0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6d, 0x6f,
	0x72, 0x79, 0x2d, 0x69, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2d, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x65, 0x6e, 0x67, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_artifact_proto_rawDescOnce sync.Once
	file_artifact_proto_rawDescData = file_artifact_proto_rawDesc
)

func file_artifact_proto_rawDescGZIP() []byte {
	file_artifact_proto_rawDescOnce.Do(func() {
		file_artifact_proto_rawDescData = protoimpl.X.CompressGZIP(file_artifact_proto_rawDescData)
	})
	return file_artifact_proto_rawDescData
}

var file_artifact_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_artifact_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_artifact_proto_goTypes = []interface{}{
	(AWSObject_EmbeddedType)(0),     // 0: artifact.AWSObject.EmbeddedType
	(*Artifact)(nil),                // 1: artifact.Artifact
	(*KubernetesArtifact)(nil),      // 2: artifact.KubernetesArtifact
	(*ArtifactSource)(nil),          // 3: artifact.ArtifactSource
	(*ArtifactPayload)(nil),         // 4: artifact.ArtifactPayload
	(*KustomizeArtifact)(nil),       // 5: artifact.KustomizeArtifact
	(*ManifestsArtifact)(nil),       // 6: artifact.ManifestsArtifact
	(*HelmArtifact)(nil),            // 7: artifact.HelmArtifact
	(*AWSArtifact)(nil),             // 8: artifact.AWSArtifact
	(*AWSObject)(nil),               // 9: artifact.AWSObject
	(*AMIArtifact)(nil),             // 10: artifact.AMIArtifact
	nil,                             // 11: artifact.KubernetesArtifact.VersionsEntry
	(*ArtifactSource_Get)(nil),      // 12: artifact.ArtifactSource.Get
	nil,                             // 13: artifact.ArtifactSource.Get.HeadersEntry
	(*AMIArtifact_ImageFinder)(nil), // 14: artifact.AMIArtifact.ImageFinder
	nil,                             // 15: artifact.AMIArtifact.ImageFinder.TagsEntry
	(*Via)(nil),                     // 16: common.Via
	(*anypb.Any)(nil),               // 17: google.protobuf.Any
	(*structpb.Struct)(nil),         // 18: google.protobuf.Struct
}
var file_artifact_proto_depIdxs = []int32{
	2,  // 0: artifact.Artifact.kubernetes:type_name -> artifact.KubernetesArtifact
	8,  // 1: artifact.Artifact.aws:type_name -> artifact.AWSArtifact
	5,  // 2: artifact.KubernetesArtifact.kustomize:type_name -> artifact.KustomizeArtifact
	6,  // 3: artifact.KubernetesArtifact.manifests:type_name -> artifact.ManifestsArtifact
	7,  // 4: artifact.KubernetesArtifact.helm:type_name -> artifact.HelmArtifact
	11, // 5: artifact.KubernetesArtifact.versions:type_name -> artifact.KubernetesArtifact.VersionsEntry
	12, // 6: artifact.ArtifactSource.get:type_name -> artifact.ArtifactSource.Get
	16, // 7: artifact.ArtifactSource.via:type_name -> common.Via
	17, // 8: artifact.ArtifactSource.provided:type_name -> google.protobuf.Any
	3,  // 9: artifact.KustomizeArtifact.source:type_name -> artifact.ArtifactSource
	3,  // 10: artifact.ManifestsArtifact.source:type_name -> artifact.ArtifactSource
	3,  // 11: artifact.HelmArtifact.source:type_name -> artifact.ArtifactSource
	10, // 12: artifact.AWSArtifact.ec2:type_name -> artifact.AMIArtifact
	9,  // 13: artifact.AWSArtifact.object:type_name -> artifact.AWSObject
	0,  // 14: artifact.AWSObject.type:type_name -> artifact.AWSObject.EmbeddedType
	18, // 15: artifact.AWSObject.definition:type_name -> google.protobuf.Struct
	14, // 16: artifact.AMIArtifact.params:type_name -> artifact.AMIArtifact.ImageFinder
	13, // 17: artifact.ArtifactSource.Get.headers:type_name -> artifact.ArtifactSource.Get.HeadersEntry
	15, // 18: artifact.AMIArtifact.ImageFinder.tags:type_name -> artifact.AMIArtifact.ImageFinder.TagsEntry
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_artifact_proto_init() }
func file_artifact_proto_init() {
	if File_artifact_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_artifact_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KustomizeArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManifestsArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AWSArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AWSObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMIArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactSource_Get); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMIArtifact_ImageFinder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_artifact_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Artifact_Kubernetes)(nil),
		(*Artifact_Aws)(nil),
	}
	file_artifact_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*KubernetesArtifact_Kustomize)(nil),
		(*KubernetesArtifact_Manifests)(nil),
		(*KubernetesArtifact_Helm)(nil),
	}
	file_artifact_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*AWSArtifact_Ec2)(nil),
		(*AWSArtifact_Object)(nil),
	}
	file_artifact_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*AMIArtifact_AmiId)(nil),
		(*AMIArtifact_Params)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_artifact_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_artifact_proto_goTypes,
		DependencyIndexes: file_artifact_proto_depIdxs,
		EnumInfos:         file_artifact_proto_enumTypes,
		MessageInfos:      file_artifact_proto_msgTypes,
	}.Build()
	File_artifact_proto = out.File
	file_artifact_proto_rawDesc = nil
	file_artifact_proto_goTypes = nil
	file_artifact_proto_depIdxs = nil
}
